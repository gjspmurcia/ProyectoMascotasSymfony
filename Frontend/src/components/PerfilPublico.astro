---
import Modal from './Modal.astro';
const { mascotaId } = Astro.props;
const PUBLIC_API_URL = import.meta.env.PUBLIC_API_URL;
---

<style>
  .hidden { display: none; }
</style>

<div id="loading-container" class="min-h-3/5 flex items-center bg-gradient-to-br from-[#ac63d377] to-[#e5d04bad] via-[#6cb4d177] via-at-29% via-[#71e8a376] via-at-68%">
  <div class="mx-auto p-2 text-center rounded">
    Cargando datos...
  </div>
</div>

<div id="mascota-container" class="min-h-3/5 bg-gradient-to-br from-[#ac63d377] to-[#e5d04bad] via-[#6cb4d177] via-at-29% via-[#71e8a376] via-at-68% hidden">
  <div class="min-h-3/5 bg-gradient-to-br from-[#732a9b] to-[#edd953] via-[#2a7b9b] via-at-29% via-[#57c785] via-at-68% pb-8 pt-2 px-4">
    <header class="max-w-4xl mx-auto mb-4">
      <!-- <p class="text-center text-2xl sm:text-3xl font-bold text-white shadow-2xl">
        Perfil de la mascota
      </p> -->
    </header>

    <div class="max-w-4xl mx-auto p-4">
      <div class="bg-white rounded-xl shadow-[0_0px_30px_rgba(0,0,0,0.6)] overflow-hidden transition-all duration-300 hover:shadow-xl">
        <!-- Layout que cambia a horizontal en pantallas md -->
        <div class="md:flex md:flex-row-reverse">
          <!-- Foto (a la derecha en PC) -->
          <div class="relative md:w-2/5 lg:w-1/2 md:h-auto">
            <div class="h-full md:h-full overflow-hidden">
              <img
                id="foto-mascota"  
                src="" 
                alt="profile" 
                class="w-full h-full object-cover transition-transform duration-500 hover:scale-105"
              />
            </div>
            <div class="absolute inset-x-0 bottom-0 bg-gradient-to-t from-teal-900/80 to-transparent p-4">
              <h1 id="nombre-mascota" >
                <span class="text-2xl sm:text-3xl text-left text-shadow font-bold text-white drop-shadow-md"></span>
              </h1>
            </div>
          </div>

          <!-- Contenido (a la izquierda en PC) -->
          <div class="p-6 md:w-3/5 lg:w-1/2">
            <div class="space-y-8">
              <!-- Sección de detalles de la mascota -->
              <div class="space-y-4">
                <h2 class="text-xl font-semibold text-teal-800 flex items-center">
                  <i class="ph ph-paw-print w-5 h-5 mr-2 text-teal-600"></i>
                  Información de la mascota
                </h2>

                <div class="space-y-3">
                  <!-- Mantener el contenido existente -->
                  <div class="flex items-start space-x-2">
                    <div class="mt-1">
                      <i class="ph ph-info w-4 h-4 text-teal-600"></i>
                    </div>
                    <div>
                      <div class="text-sm font-medium text-gray-500">Observaciones</div>
                      <div id="observaciones"><span class="text-gray-800"></span></div>
                    </div>
                  </div>

                  <div class="flex items-start space-x-2">
                    <div class="mt-1">
                      <i class="ph ph-hash w-4 h-4 text-teal-600"></i>
                    </div>
                    <div>
                      <div class="text-sm font-medium text-gray-500">Nº chip</div>
                      <div id="num-chip"><span class="text-gray-800"></span></div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Sección de información del dueño -->
              <div class="space-y-4">
                <h2 class="text-xl font-semibold text-teal-800 flex items-center">
                  <i class="ph ph-user w-5 h-5 mr-2 text-teal-600"></i>
                  Información del dueño
                </h2>

                <div class="flex items-start space-x-2">
                  <div class="mt-1">
                    <i class="ph ph-heart w-4 h-4 text-teal-600"></i>
                  </div>
                  <div>
                    <div class="text-sm font-medium text-gray-500">Nombre</div>
                    <div id="nombre-usuario" class="text-gray-800"><span></span></div>
                  </div>
                </div>

                <div class="space-y-3"> <!-- m-4 -->
                  <div class="py-1 flex flex-col space-y-2">
                    <div id="telefono-usuario" class="flex items-center text-gray-800">
                      <i class="ph ph-phone w-4 h-4 mr-2 text-teal-600"></i>
                      <span></span>
                    </div>
                    <!--<a href="tel:+34612345678" 
                      class="inline-flex items-center justify-center rounded-md px-3 py-2 text-md font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:ring-offset-2 bg-teal-600 text-white hover:bg-teal-700">
                      <i class="ph ph-phone w-4 h-4 mr-3"></i>
                      Llamar por teléfono
                    </a>-->
                    <button id="btnLlamar" class="inline-flex items-center justify-center rounded-md px-3 py-1.5 text-md font-medium transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:ring-offset-2 bg-white text-teal-600 border-2 border-teal-600 hover:bg-teal-50">
                      <i class="ph ph-phone w-4 h-4 mr-2"></i>
                      Llamar por teléfono
                    </button>
                  </div>

                  <div class="py-1 flex flex-col space-y-2">
                    <div id="email-usuario" class="flex items-center text-gray-800">
                      <i class="ph ph-envelope w-4 h-4 mr-2 text-teal-600"></i>
                      <span></span>
                    </div>

                    <button id="btnMostrar" class="inline-flex items-center justify-center rounded-md px-3 py-1.5 text-md font-medium transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:ring-offset-2 bg-white text-teal-600 border-2 border-teal-600 hover:bg-teal-50">
                      <i class="ph ph-envelope w-4 h-4 mr-2"></i>
                      Escribir mensaje a mi dueño
                    </button>

                    <!-- Textarea y Botón 2: envío, ocultos inicialmente -->
                    <div id="zonaMensaje" class="hidden mt-2">
                      <textarea id="mensaje"
                        placeholder="Escribe un mensaje para el dueño"
                        class="w-full h-32 p-4 mt-2 border border-gray-300 rounded-lg shadow-sm resize-none"></textarea>
                      <div class="flex flex-col md:flex-row gap-4 mt-4">
                        <button id="btnEnviar" class="inline-flex items-center justify-center transition duration-300">
                          <i class="ph ph-envelope w-4 h-4 mr-2"></i>
                          Enviar mensaje
                        </button>
                        <button id="btnCancelar" class="inline-flex items-center justify-center warning transition duration-300">Cancelar</button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<Modal title='Aviso:' />

<script define:vars={{ mascotaId, PUBLIC_API_URL }}>
  console.log("Mascota ID:", mascotaId);

  const loadingContainer = document.getElementById("loading-container");
  const mascotaContainer = document.getElementById("mascota-container");

  document.addEventListener("DOMContentLoaded", async () => {
    async function cargarPerfilMascota() {
      try {
        // Construimos la URL con el id recibido por la URL
        const response = await fetch(`${PUBLIC_API_URL}/mostrar/qr/${mascotaId}`);
        if (!response.ok) {
          // Si es 404 o 500, mostramos mensaje de que la mascota no existe
          if (response.status === 404 || response.status === 500) {
            mascotaContainer.classList.add("flex","items-center");
            mascotaContainer.innerHTML = `
              <div class="mx-auto p-2">
                Mascota no encontrada.
              </div>
            `;
            return;
          }
          throw new Error(`Error en el fetch: ${response.status}`);
        }
        const data = await response.json();

        // Función para actualizar cada campo con su respectivo dato o "No especificado"
        const actualizarCampo = (id, valor) => {
          const elemento = document.getElementById(id);
          if (elemento) {
            const span = elemento.querySelector("span");
            if (span) span.textContent = valor || "No especificado";
          }
        };

        actualizarCampo("nombre-mascota", data.nombre_mascota);
        actualizarCampo("num-chip", data.num_chip);
        actualizarCampo("observaciones", data.observaciones);
        actualizarCampo("nombre-usuario", data.nombre_usuario);
        actualizarCampo("telefono-usuario", data.telefono_usuario);
        actualizarCampo("email-usuario", data.email_usuario);

        document.getElementById("btnLlamar").addEventListener("click", () => { window.location.href = 'tel:+34' + data.telefono_usuario; });

        const fotoElemento = document.getElementById("foto-mascota");
        if (fotoElemento && fotoElemento instanceof HTMLImageElement) {
          fotoElemento.src = data.foto
            ? `${PUBLIC_API_URL}/uploads/mascotas/${data.foto}`
            : "/foto_no_disponible.png";
        } else {
          console.warn("El elemento con id 'foto-mascota' no se encontró en el DOM.");
        }
      } catch (error) {
        console.error("Error en la carga del perfil:", error);
        mascotaContainer.classList.add("flex","items-center");
        mascotaContainer.innerHTML = `
          <div class="mx-auto p-2">
            Error al conectar con el servidor.
          </div>
        `;
      }
    }
    await cargarPerfilMascota();

    loadingContainer.classList.add("hidden");
    mascotaContainer.classList.remove("hidden");

    const btnMostrar = document.getElementById("btnMostrar");
    const zonaMensaje = document.getElementById("zonaMensaje");
    const btnEnviar = document.getElementById("btnEnviar");
    const btnCancelar = document.getElementById("btnCancelar");
    const textarea = document.getElementById("mensaje");

    // Al pulsar "Escribir mensaje"
    btnMostrar.addEventListener("click", () => {
      zonaMensaje.classList.remove("hidden");
      btnMostrar.classList.add("hidden");
      textarea.focus();
    });

    // Al pulsar "Cancelar"
    btnCancelar.addEventListener("click", () => {
      zonaMensaje.classList.add("hidden");
      btnMostrar.classList.remove("hidden");
    });

    // Al pulsar "Enviar mensaje"
    btnEnviar.addEventListener("click", async () => {
      const mensaje = textarea.value.trim();
      if (!mensaje) {
        window.showModal({
        message: "Escribe algo antes de enviar.",
        onConfirm: () => {textarea.focus();}});
        return;
      }

      try {
        const response = await fetch(`${PUBLIC_API_URL}/api/enviar-aviso/${mascotaId}`, {
          method: "POST",
          credentials: "include",
          headers: {
            "Accept": "application/json",
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ mensaje })
        });
        if (!response.ok) {
          window.showModal({message: `Error: ${result.mensaje}`, onConfirm: () => {}});
          return;
        }

        if (!response.ok) throw new Error(`Status ${response.status}`);
        const result = await response.json();
        window.showModal({message: "¡Mensaje enviado con éxito!",
        onConfirm: () => {
          // Limpiar textarea y ocultar zona de mensaje
          textarea.value = "";
          zonaMensaje.classList.add("hidden");
          btnMostrar.classList.remove("hidden");
        }});
      } catch (err) {
        console.error("Error al enviar:", err);
        window.showModal({message: "Ocurrió un error de red. Intenta de nuevo.",onConfirm: () => {}});
      }
    });
  });
</script>