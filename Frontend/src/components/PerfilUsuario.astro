---
import Modal from './Modal.astro';
---

<div>
    <div id="profile-container" class="p-2 text-center rounded">
      Cargando datos...
    </div>
  </div>
  
  <Modal title='Aviso:' />
  <script>
    // 1. Obtener el elemento contenedor en el DOM
    const profileContainer: HTMLElement | null = document.getElementById('profile-container');


    // 2. Función asíncrona para obtener los datos
    async function fetchUserProfile() {
      try {
        const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/mi_perfil`, {
          method: "GET",
          credentials: "include",
          headers: {
              'Accept': 'application/json',
          }
        });
        const data = await response.json();
  
        // 4. Verificar el estado de la respuesta y el status de la API
        if (response.ok && data.status === "success") {
           const usuario = data.usuario;
           console.log("Datos de usuario cargados:", usuario);
  
           // 5. Si es exitoso, construir e inyectar el HTML con los datos
           if (profileContainer) {
           profileContainer.innerHTML = `
             <div>
                <h1>Bienvenid@, ${usuario.nombre}</h1>
                <p><strong>Email:</strong> ${usuario.email || 'No especificado'}</p>
                <p><strong>DNI:</strong> ${usuario.dni || 'No especificado'}</p>
                <p><strong>Teléfono:</strong> ${usuario.telefono || 'No especificado'}</p>
                <p><strong>Dirección:</strong> ${usuario.calle || 'No especificado'}, ${usuario.num_calle || ''}</p>
                <p><strong>Código postal:</strong> ${usuario.cod_postal || 'No especificado'}</p>
                <p><strong>Ciudad:</strong> ${usuario.ciudad || 'No especificada'}</p>
                </br>
                <button id="botonEditarUsuario">Editar usuario</button>
                <button id="botonCambiarPassword">Cambiar contraseña</button>
                <button id="botonLogout">Cerrar sesión</button>
                <button id="botonEliminarUsuario" class="warning">Eliminar usuario</button>
                </br>
             </div>
           `;
           const botonEliminarUsuario = document.getElementById('botonEliminarUsuario');
           const botonEditarUsuario = document.getElementById('botonEditarUsuario');
           const botonCambiarPassword = document.getElementById('botonCambiarPassword');
           const botonLogout = document.getElementById('botonLogout');

           botonEliminarUsuario?.addEventListener('click', () => eliminarUsuario(usuario.id));
           botonEditarUsuario?.addEventListener('click', () => {  window.location.href = `/editar-usuario/${usuario.id}`; });
           botonCambiarPassword?.addEventListener('click', () => {  window.location.href = `/cambiar-password/${usuario.id}`; });
           botonLogout?.addEventListener('click', () => {  window.location.href = `/logout`; });
          }
        } else {

          // Si no hay usuario autenticado
          if (response.status === 401) {
            profileContainer.innerHTML = `<p>El usuario no esta autenticado (Status: ${response.status})</p>`;
          } else {
          //  Si hay un error de la API 
          const mensajeError = data.message || `Error desconocido de la API (Status: ${response.status})`;
          console.error("Datos recibidos:", data); 
          profileContainer.textContent = `Error: ${mensajeError}`;}
        }
      } catch (error) {
        // 7. Si hay un error de red o cualquier otra excepción durante el fetch
        console.error("Error de red durante el fetch:", error);
        profileContainer.textContent = "Error de red al conectar con la API.";
      }
    }
  
    // 8. Llamar a la función para iniciar la carga de datos cuando el script se ejecuta
    fetchUserProfile();
  
    async function eliminarUsuario(id) {
      
      window.showModal({
          message: "¿Estás seguro de que deseas eliminar tu cuenta? Esta acción no se puede deshacer.",
          onConfirm: async () => {
              try {
                const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/mi_perfil_eliminar/${id}`, {
                  method: 'DELETE',
                  credentials: 'include',
                  headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                  }
              });
            
            const data = await response.json();

            if (response.ok && data.status === "success") {
              window.showModal({
                message: "Usuario eliminado correctamente",
                onConfirm: () => {
                  window.location.href = "/";
                }
              });
            } else {
              window.showModal({
                message: `Error al eliminar el usuario: ${data.mensaje || 'Error desconocido'}`,
                onConfirm: () => {
                  window.location.href = "/mi-perfil";
                }
              });
            }
          } catch (error) {
            console.error("Error al eliminar el usuario:", error);
            window.showModal({
                message: "Error de conexión al intentar eliminar el usuario",
                onConfirm: () => {
                  window.location.href = "/mi-perfil";
                }
            });
          }
        }
      });
    }

    function logout() {
      fetch(`${import.meta.env.PUBLIC_API_URL}/api/logout`, {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      })
      .then(response => {
        if (response.ok) {
          window.location.href = '/login'; 
        } else {
          console.error('Error al cerrar sesión');
        }
      })
      .catch(error => {
        console.error('Error de red:', error);
      });
    }
  </script>

