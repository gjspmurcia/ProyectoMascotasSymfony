---
import Modal from './Modal.astro';
---

<div class="min-h-3/5 flex items-center p-12 bg-gradient-to-br from-[#ac63d377] to-[#e5d04bad] via-[#6cb4d177] via-at-29% via-[#71e8a376] via-at-68%">
  <div class="w-full max-w-3xl mx-auto">
    <h1 class="text-3xl text-center font-extrabold text-primary sm:text-4xl sm:tracking-tight mb-2">Registra una nueva mascota</h1>
    <h2 class="text-center text-gray-700 text-md md:text-xl mb-6">Completa su perfil y genera el código QR</h2>

  <form id="formRegistroMascota" method="POST" action=`${import.meta.env.PUBLIC_API_URL}/api/mi_mascota_nueva`
    enctype="multipart/form-data" class="bg-white text-gray-700 flex flex-col gap-4 w-full mx-auto p-8 rounded-xl shadow-xl hover:shadow-lg/40 border border-gray-300">
    <div>
        <label for="nombre">Nombre:</label>
        <input type="text" id="nombre" name="nombre" required class="w-full mt-1 p-2 border rounded-md" autofocus />
      </div>

      <div>
        <label for="num_chip">Nº Chip:</label>
        <input type="text" id="num_chip" name="num_chip" class="w-full mt-1 p-2 border rounded-md" />
      </div>

      <div>
        <label for="observaciones">Observaciones:</label>
        <input type="text" id="observaciones" name="observaciones" class="w-full mt-1 p-2 border rounded-md" />
      </div>

      <div>
        <label for="foto">Foto:</label>
        <input type="file" id="foto" name="foto" accept="image/*" class="w-full mt-1 border p-2 rounded-md"/>
        <p class="text-xs text-gray-500 mt-1">Formatos aceptados: JPG, PNG, GIF (máx. 5MB)</p>
      </div>

      <div class="flex flex-col md:flex-row gap-4 mt-4">
        <button type="submit"
          class="w-full md:w-auto bg-teal-600 hover:bg-teal-800 text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline transition duration-300">
          Registrar mascota
        </button>

        <button id="botonVolver" class="warning">Volver</button>
      </div>

      <p id="mensaje" class="text-red-600 mt-2"></p>
    </form>
  </div>
</div>

<Modal title='Aviso:' />

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const formMascota = document.getElementById("formRegistroMascota");
    const mensaje = document.getElementById("mensaje");

    if (!formMascota) {
      console.error("No se encontró el formulario");
      return;
    }

    formMascota.addEventListener("submit", async (event) => {
      event.preventDefault(); // Evita la recarga de la página

      if (!mensaje) {
        console.error("No se encontró el elemento mensaje");
        return;
      }

      mensaje.textContent = "";
      mensaje.classList.remove("text-red-500", "text-green-500");

      let formData = new FormData(formMascota as HTMLFormElement);

      if (formData == null) {
        console.log("formData es null");
      }

      try {
        const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/mi_mascota_nueva`, {
          method: "POST",
          credentials: "include",
          body: formData,
        });

        const responseData = await response.json();

        if (response.ok) {
          mensaje.textContent = "Registro exitoso!";
          mensaje.classList.remove("text-red-500");
          mensaje.classList.add("text-green-500");
          console.log("Registro exitoso:", responseData);
          window.showModal({
            message: "Mascota registrada correctamente",
            onConfirm: () => {
              window.location.href = "/mis-mascotas";
            }
          });
        } else {
          console.error("Error en el registro:", responseData);
          if (responseData.mensaje && Array.isArray(responseData.mensaje)) {
            let errorText = "";
            responseData.mensaje.forEach((error) => {
              errorText += `${error.campo}: ${error.error}\n`;
            });
            mensaje.textContent = `Error: ${errorText}`;
          } else {
            mensaje.textContent = `Error desconocido: ${responseData.mensaje || "Error desconocido"}`;
          }
          mensaje.classList.remove("text-green-500");
          mensaje.classList.add("text-red-500");
        }
      } catch (error) {
        mensaje.textContent = "Error de red. Inténtalo de nuevo más tarde.";
        mensaje.classList.remove("text-green-500");
        mensaje.classList.add("text-red-500");
        console.error("Error de red:", error);
      }
    });
  });

  // Vista previa de la imagen subida
  const fotoInput = document.getElementById("foto");
  const previewContainer = document.createElement("div");
  previewContainer.className = "mt-2";

  fotoInput?.parentNode?.appendChild(previewContainer);

  fotoInput?.addEventListener("change", (e) => {
    const file = (e.target as HTMLInputElement).files?.[0];
    previewContainer.innerHTML = "";

    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        const img = document.createElement("img");
        img.src = e.target?.result as string;
        img.className = "w-32 h-32 object-cover rounded";
        previewContainer.appendChild(img);
      };
      reader.readAsDataURL(file);
    }
  });

  document.getElementById("botonVolver").addEventListener("click", () => {
    window.location.href = 'javascript:history.back()'; 
  });
</script>